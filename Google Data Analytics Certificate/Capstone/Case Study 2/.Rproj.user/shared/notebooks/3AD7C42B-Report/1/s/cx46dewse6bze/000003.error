{"frames":[{"func":"`$<-`(`*tmp*`, ActivityMinute, value = structure(c(1460505600, \n1460509200, 1460512800, 1460516400, 1460520000, 1460523600, 1460527200, \n1460530800, 1460534400, 1460538000, 1460541600, 1460545200, 1460548800, \n1460552400, 1460556000, 1460559600, 1460563200, 1460566800, 1460570400,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`$<-.tbl_df`(`*tmp*`, ActivityMinute, value = structure(c(1460505600, \n1460509200, 1460512800, 1460516400, 1460520000, 1460523600, 1460527200, \n1460530800, 1460534400, 1460538000, 1460541600, 1460545200, 1460548800, \n1460552400, 1460556000, 1460559600, 1460563200, 1460566800, 1460570400,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tbl_subassign(x, i = NULL, as_string(name), list(value), i_arg = NULL, \n    j_arg = name, value_arg = substitute(value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rhs_rows(value, fast_nrow(x), i_arg = NULL, value_arg)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (j in seq_along(value)) {\n    if (!is.null(value[[j]])) {\n        value[[j]] <- vec_recycle(value[[j]], nrow)\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_recycle(value[[j]], nrow)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_recycle_incompatible_size(x_size = 21645L, size = 1325580L, \n    x_arg = \"\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(x_size = x_size, y_size = size, x_arg = x_arg, class = c(\"vctrs_error_incompatible_size\", \n    \"vctrs_error_recycle_incompatible_size\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    cnd_signal(error_assign_incompatible_size(nrow, value, j, \n        i_arg, value_arg)) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_assign_incompatible_size(nrow, value, j, i_arg, \n    value_arg))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Assigned data `lubridate::mdy_hms(minutes_data_wide$ActivityHour)` must be compatible with existing data.\n\u001B[31mx\u001B[39m Existing data has 1325580 rows.\n\u001B[31mx\u001B[39m Assigned data has 21645 rows.\n\u001B[34mi\u001B[39m Only vectors of size 1 are recycled.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}